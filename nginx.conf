# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
include /usr/share/nginx/modules/*.conf;
events {
    worker_connections 1024;
}
http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    server {
        listen              5173 ssl;
        server_name         _;
        
        ssl_certificate     /etc/nginx/certificate.crt;
        ssl_certificate_key /etc/nginx/private.key;

        include /etc/nginx/default.d/*.conf;
        location / {
            root         /var/www/html;
            index /index.html;
            try_files $uri $uri/ /index.html;
            gzip on;
            gzip_static on;
            gzip_min_length 1k;
            gzip_http_version 1.0;
            gzip_comp_level 6;
            gzip_types  text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
            add_header "Access-Control-Allow-Origin" "*";   
            add_header "Access-Control-Allow-Methods" "*";
            add_header "Access-Control-Allow-Headers" "*";
            add_header Cache-Control "public, no-cache, must-revalidate";
            if ($request_filename ~* .*\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$)
            {
                expires 7d;
            }
            
            if ($request_method = "OPTIONS") {
                return 204;
            }
        }
        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 497 =301 https://$host:$server_port$request_uri;
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        location /api {
            rewrite ^.+api/?(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:3000/$1$is_args$args;
            client_max_body_size  500m;
            add_header Cache-Control no-store;
        }
    }
}
